package leeeetcodeee;
import java.util.*;
public class Delete_at_a_given_position {

	Node head; 
    class Node {
        int data;
        Node next;
        Node(int d)
        {
            data = d;
            next = null;
        }
    }
  
   public void delete_complete()
   {
	   head = null;
   }
    public void push(int new_data)
    {
       
        Node new_node = new Node(new_data);
  
      
        new_node.next = head;
  
        
        head = new_node;
    }
  
    
    void deleteNode(int position)
    {
        
        if (head == null)
            return;
  
       
        Node temp = head;
  
        
        if (position == 0) {
            head = temp.next; 
            return;
        }
  
        
        for (int i = 0; temp != null && i < position - 1;
             i++)
            temp = temp.next;
  
      
        if (temp == null || temp.next == null)
            return;
  
               Node temp1 = temp.next.next;
  
        temp.next = temp1;
    }
  
   
    public void printList()
    {
    	int count = 0;
        Node tnode = head;
        while (tnode != null) {
            System.out.print(tnode.data + " ");
            tnode = tnode.next;
            count++;
            
        }
        System.out.println();
        System.out.println("The length of the LinkedList is:" + " " +count);
    }
	public static void main(String[] args) {
		Delete_at_a_given_position ll1 = new Delete_at_a_given_position();
		Scanner sc = new Scanner(System.in);
		ll1.push(30);
		ll1.push(100);
		ll1.push(40);
		ll1.push(10);
		ll1.push(80);
        ll1.push(90);
		ll1.push(70);
		ll1.printList();
		ll1.deleteNode(0);
		System.out.println();
		ll1.printList();
		ll1.deleteNode(3);
		System.out.println();
		ll1.printList();
		ll1.deleteNode(4);
		System.out.println();
		ll1.printList();
		ll1.delete_complete();
		ll1.printList();

		
	

	}

}
